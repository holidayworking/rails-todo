name: main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      DATABASE_HOST: localhost
      DATABASE_USER: todo
      DATABASE_PASSWORD: todo
    services:
      postgres:
        image: postgres:13.2
        env:
          POSTGRES_USER: todo
          POSTGRES_PASSWORD: todo
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Use Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --frozen-lockfile --prefer-offline
      - name: Run linters
        run: |
          yarn lint
          ./bin/rubocop
      - name: Database setup
        run: ./bin/rails db:setup
      - name: Run tests
        run: |
          yarn test
          ./bin/rspec
